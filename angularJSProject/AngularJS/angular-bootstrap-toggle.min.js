!function(){"use strict";angular.module("ui.toggle",[]).value("$toggleSuppressError",!1).constant("toggleConfig",{btnCheckboxFalse:!1,btnCheckboxTrue:!0,on:"On",off:"Off",size:"",onClass:"btn-primary",onstyle:"",offClass:"btn-default",offstyle:"",toggleStyle:"",toggleClass:"",style:"",width:"",height:"",disabled:!1}).controller("ToggleController",["$scope","$attrs","$interpolate","$log","$document","toggleConfig","$toggleSuppressError",function(e,l,t,n,a,o,s){var r,g=this,i=Object.keys(o);angular.forEach(i,function(n,a){if(angular.isDefined(l[n]))switch(typeof o[n]){case"string":g[n]=t(l[n])(e.$parent);break;case"function":break;default:g[n]=e.$parent.$eval(l[n])}else g[n]=o[n]}),g.onstyle&&(g.onClass=g.onstyle),g.offstyle&&(g.offClass=g.offstyle),g.style&&(g.toggleClass=g.style),""===g.on&&(g.on="&nbsp;"),""===g.off&&(g.off="&nbsp;"),this.init=function(t){r=t;var n=g.element.find("label"),a=g.element.find("span"),o=g.element.find("div");if(g.wrapperElement=o[0],g.onElement=n[0],g.offElement=n[1],g.handleElement=a[0],angular.element(g.onElement).html(g.on),angular.element(g.offElement).html(g.off),angular.element(g.wrapperElement).addClass(g.size),angular.element(g.onElement).addClass(g.size),angular.element(g.offElement).addClass(g.size),angular.element(g.handleElement).addClass(g.size),angular.element(g.wrapperElement).addClass(g.toggleClass),!g.width){var s=Math.max(g.onElement.scrollWidth,g.offElement.scrollWidth)+Math.max(g.handleElement.scrollWidth,16)/2+2;g.width=s+"px"}if(!g.height){var i=Math.max(g.onElement.scrollHeight,g.offElement.scrollHeight)+2;g.height=i+"px"}angular.element(g.onElement).addClass(g.onClass).addClass("toggle-on"),angular.element(g.offElement).addClass(g.offClass).addClass("toggle-off"),g.computeStyle(),r.$render=function(){g.toggle()},angular.isDefined(l.ngChange)&&r.$viewChangeListeners.push(function(){e.$eval(l.ngChange)})},this.computeStyle=function(){angular.element(g.onElement).attr("disabled",g.disabled),angular.element(g.offElement).attr("disabled",g.disabled),angular.element(g.handleElement).attr("disabled",g.disabled),e.wrapperStyle=g.toggleStyle?e.$parent.$eval(g.toggleStyle):{},e.wrapperStyle.width=g.width,e.wrapperStyle.height=g.height},this.toggle=function(){r.$viewValue?angular.element(g.wrapperElement).removeClass("off "+g.offClass).addClass(g.onClass):angular.element(g.wrapperElement).addClass("off "+g.offClass).removeClass(g.onClass)},e.onSwitch=function(e){return!g.disabled&&(r.$setViewValue(!r.$viewValue),r.$render(),!0)},angular.forEach(i,function(e,t){l.$observe(e,function(l){g[e]!==l&&(g[e]=l,g.computeStyle())})})}]).directive("toggle",function(){return{restrict:"E",template:'<div ng-cloak class="toggle btn off" ng-style="wrapperStyle"ng-click="onSwitch($event)"><div class="toggle-group"><label class="btn toggle-on-pad"></label><label class="btn toggle-off-pad active"></label><span class="btn btn-default toggle-handle"></span></div></div>',scope:{ngModel:"="},require:["toggle","ngModel"],controller:"ToggleController",controllerAs:"toggle",compile:function(e,l,t){return{post:function(e,l,t,n){var a=n[0],o=n[1];a.element=l,a.init(o)},pre:function(){}}}}})}();